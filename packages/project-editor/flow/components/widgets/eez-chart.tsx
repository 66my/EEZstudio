import React from "react";
import { observer } from "mobx-react";

import {
    registerClass,
    makeDerivedClassInfo,
    ProjectType,
    PropertyType
} from "project-editor/core/object";

import { Widget } from "project-editor/flow/component";

import type { IFlowContext } from "project-editor/flow/flow-interfaces";

import type { IStore } from "eez-studio-shared/store";
import type { IActivityLogEntry } from "instrument/window/history/activity-log";
import type { IAppStore } from "instrument/window/history/history";
import type { IDashboardComponentContext } from "eez-studio-types";
import { WaveformFormat } from "eez-studio-ui/chart/WaveformFormat";

import { Waveform } from "instrument/window/waveform/generic";
import { MultiWaveform } from "instrument/window/waveform/multi";

import { ChartPreview } from "instrument/window/chart-preview";
import { DlogWaveform } from "instrument/window/waveform/dlog";
import { computed, makeObservable, observable, runInAction } from "mobx";
import { specificGroup } from "project-editor/ui-components/PropertyGrid/groups";

////////////////////////////////////////////////////////////////////////////////

export class EEZChartWidget extends Widget {
    static classInfo = makeDerivedClassInfo(Widget.classInfo, {
        enabledInComponentPalette: (projectType: ProjectType) =>
            projectType === ProjectType.DASHBOARD,

        componentPaletteGroupName: "!1Visualiser",

        properties: [
            {
                name: "chartType",
                type: PropertyType.Enum,
                enumItems: [
                    {
                        id: "single"
                    },
                    {
                        id: "multi"
                    },
                    {
                        id: "dlog"
                    }
                ],
                propertyGridGroup: specificGroup
            }
        ],

        defaultValue: {
            left: 0,
            top: 0,
            width: 480,
            height: 320,
            chartType: "single"
        },

        icon: (
            <svg viewBox="0 0 200 200">
                <path d="M29.31 175.69a5 5 0 0 1-5-5V29.31a5 5 0 0 1 10 0v141.38a5 5 0 0 1-5 5Z" />
                <path d="M29.31 130a5 5 0 0 1-3.85-8.19l20.69-25a5 5 0 0 1 6.25-1.2l29 15.88 40-40a5 5 0 0 1 5.94-.85L146 80.85l20.42-33.45a5 5 0 0 1 8.58 5.2l-22.89 37.5a5 5 0 0 1-6.67 1.79l-19.55-10.71-40 40a5 5 0 0 1-5.94.85l-28.7-15.69-18.09 21.85a5 5 0 0 1-3.85 1.81ZM170.69 155H29.31a5 5 0 0 1 0-10h141.38a5 5 0 0 1 0 10Z" />
            </svg>
        ),

        execute: (context: IDashboardComponentContext) => {}
    });

    constructor() {
        super();

        makeObservable(this, {
            chartType: observable,
            eezChart: computed
        });
    }

    chartType: "single" | "multi" | "dlog";

    // data

    // format
    // samplingRate
    // unitName
    // color
    // colorInverse
    // label
    // offset
    // scale

    // viewOptions

    get eezChart() {
        return new EEZChart(this.chartType);
    }

    render(
        flowContext: IFlowContext,
        width: number,
        height: number
    ): React.ReactNode {
        return (
            <EEZChartElement
                widget={this}
                flowContext={flowContext}
                width={width}
                height={height}
                eezChart={this.eezChart}
            ></EEZChartElement>
        );
    }
}

registerClass("EEZChartWidget", EEZChartWidget);

////////////////////////////////////////////////////////////////////////////////

interface IViewOptions {
    axesLines: {
        type: "dynamic" | "fixed";
        steps: {
            x: number[];
            y: number[];
        };
        majorSubdivision: {
            horizontal: number;
            vertical: number;
        };
        minorSubdivision: {
            horizontal: number;
            vertical: number;
        };
        snapToGrid: boolean;
        defaultZoomMode: "default" | "all";
    };
    showAxisLabels: boolean;
    showZoomButtons: boolean;
}

class EEZChart {
    chart: Waveform | MultiWaveform | DlogWaveform | undefined;

    constructor(public chartType: "single" | "multi" | "dlog") {
        makeObservable(this, {
            chart: observable
        });

        setTimeout(this.createChart, 0);
    }

    createChart = () => {
        console.log("createChart");
        let chart: Waveform | MultiWaveform | DlogWaveform;
        if (this.chartType == "single") {
            chart = this.createGenericWaveform({
                id: "0",
                data: EEZChart.genData(
                    WaveformFormat.FLOATS_64BIT,
                    1000,
                    Math.sin
                ),
                samplingRate: 10,
                format: WaveformFormat.FLOATS_64BIT,
                unitName: "volt",
                color: "#bb8100",
                colorInverse: "#bb8100",
                label: "Channel 1",
                offset: 0,
                scale: 1,
                viewOptions: {
                    axesLines: {
                        type: "dynamic",
                        steps: {
                            x: [],
                            y: []
                        },
                        majorSubdivision: {
                            horizontal: 24,
                            vertical: 8
                        },
                        minorSubdivision: {
                            horizontal: 5,
                            vertical: 5
                        },
                        snapToGrid: true,
                        defaultZoomMode: "all"
                    },
                    showAxisLabels: true,
                    showZoomButtons: true
                },
                measurements: undefined,
                rulers: undefined
            });
        } else if (this.chartType == "multi") {
            chart = this.createMultiWaveform({
                id: "0",
                waveforms: [
                    this.createGenericWaveform({
                        id: "1",
                        data: EEZChart.genData(
                            WaveformFormat.FLOATS_64BIT,
                            1000,
                            Math.sin
                        ),
                        samplingRate: 10,
                        format: WaveformFormat.FLOATS_64BIT,
                        unitName: "current",
                        color: "#0081bbbb",
                        colorInverse: "#0081bb",
                        label: "Channel 1 Current",
                        offset: 0,
                        scale: 1,
                        viewOptions: {
                            axesLines: {
                                type: "dynamic",
                                steps: {
                                    x: [],
                                    y: []
                                },
                                majorSubdivision: {
                                    horizontal: 24,
                                    vertical: 8
                                },
                                minorSubdivision: {
                                    horizontal: 5,
                                    vertical: 5
                                },
                                snapToGrid: true,
                                defaultZoomMode: "all"
                            },
                            showAxisLabels: true,
                            showZoomButtons: true
                        },
                        measurements: undefined,
                        rulers: undefined
                    }),
                    this.createGenericWaveform({
                        id: "2",
                        data: EEZChart.genData(
                            WaveformFormat.FLOATS_64BIT,
                            1000,
                            Math.cos
                        ),
                        samplingRate: 10,
                        format: WaveformFormat.FLOATS_64BIT,
                        unitName: "volt",
                        color: "#bb8100",
                        colorInverse: "#bb8100",
                        label: "Channel 1 Voltage",
                        offset: 0,
                        scale: 1,
                        viewOptions: {
                            axesLines: {
                                type: "dynamic",
                                steps: {
                                    x: [],
                                    y: []
                                },
                                majorSubdivision: {
                                    horizontal: 24,
                                    vertical: 8
                                },
                                minorSubdivision: {
                                    horizontal: 5,
                                    vertical: 5
                                },
                                snapToGrid: true,
                                defaultZoomMode: "all"
                            },
                            showAxisLabels: true,
                            showZoomButtons: true
                        },
                        measurements: undefined,
                        rulers: undefined
                    })
                ],
                viewOptions: {
                    axesLines: {
                        type: "dynamic",
                        steps: {
                            x: [],
                            y: []
                        },
                        majorSubdivision: {
                            horizontal: 24,
                            vertical: 8
                        },
                        minorSubdivision: {
                            horizontal: 5,
                            vertical: 5
                        },
                        snapToGrid: true,
                        defaultZoomMode: "all"
                    },
                    showAxisLabels: true,
                    showZoomButtons: true
                },
                measurements: undefined,
                rulers: undefined
            });
        } else {
            chart = this.createDlogWaveform({
                id: "0",
                data: EEZChart.genDlogData(
                    ""
                ),
                viewOptions: {
                    axesLines: {
                        type: "dynamic",
                        steps: {
                            x: [],
                            y: []
                        },
                        majorSubdivision: {
                            horizontal: 24,
                            vertical: 8
                        },
                        minorSubdivision: {
                            horizontal: 5,
                            vertical: 5
                        },
                        snapToGrid: true,
                        defaultZoomMode: "all"
                    },
                    showAxisLabels: true,
                    showZoomButtons: true
                },
                measurements: undefined,
                rulers: undefined
            });
        }

        runInAction(() => {
            this.chart = chart;
        });
    };

    static genData(
        format: WaveformFormat,
        dataLength: number,
        fn: (x: number) => number
    ) {
        const data = Buffer.alloc(dataLength * 8);
        for (let i = 0; i < dataLength; i++) {
            data.writeDoubleLE(fn((2 * Math.PI * i) / dataLength), i * 8);
        }
        return data;
    }

    static genDlogData(hex: string) {
        return Buffer.from(hex, "hex");
    }

    get store(): IStore {
        return {
            storeName: "dummy",
            storeVersion: 0,
            notifySource: {
                id: "dummy",
                filterMessage: () => {
                    console.log("notifySource.filterMessage");
                    return true;
                },
                onNewTarget: () => {
                    console.log("notifySource.onNewTarget");
                }
            },
            createObject: (object, options) => {
                console.log("createObject", object, options);
                return undefined;
            },
            updateObject: (object, options) => {
                //console.log("updateObject", object, options);
            },
            deleteObject: (object, options) => {
                console.log("deleteObject", object, options);
            },
            undeleteObject: (object, options) => {
                console.log("undeleteObject", object, options);
            },
            findById: id => {
                console.log("findById", id);
                return undefined;
            },
            findByOid: oid => {
                console.log("findByOid", oid);
                return undefined;
            },
            watch: (objectsCollection, filterSpecification) => {
                console.log("watch", objectsCollection, filterSpecification);
                return "dummy";
            },
            nonTransientAndNonLazyProperties: "dummy",
            dbRowToObject: (row: any) => {
                console.log("dbRowToObject", row);
                return undefined;
            },
            getSourceDescription: (sid: string) => {
                console.log("getSourceDescription", sid);
                return "dummy";
            }
        };
    }

    /*
{
    "state": "success",
    "fileType": { "mime": "application/eez-raw" },
    "description": "Channel: 1, Sampling rate: 125000000, Preamble: 0,2,7500000,1,8.000000e-09,-3.000002e-02,0,1.039844e-01,0,97",
    "waveformDefinition": {
        "samplingRate": 125000000,
        "format": 2,
        "unitName": "amp",
        "color": "#FBFB00",
        "colorInverse": "#AEAE00",
        "label": "Channel 1",
        "offset": -10.086486800000001,
        "scale": 0.1039844,
        "cachedMinValue": 49,
        "cachedMaxValue": 146
    },
    "viewOptions": {
        "axesLines": {
            "type": "dynamic",
            "majorSubdivision": { "horizontal": 12, "vertical": 8 },
            "minorSubdivision": { "horizontal": 5, "vertical": 5 }
        },
        "showAxisLabels": true,
        "showZoomButtons": true
    },
    "horizontalScale": 0.005,
    "verticalScale": 2,
    "dataLength": 7500000,
    "note": "[{\"insert\":\"Current harmonics, DCM224 2 x 60 W, DCP405 140 W + \"},{\"attributes\":{\"bold\":true},\"insert\":\"10u2 only\"},{\"insert\":\"\\n\"}]",
    "measurements": {
        "measurements": [
            {
                "measurementId": "12712f20-8456-462b-cc9c-4d22508e223d",
                "measurementFunctionId": "rms"
            },
            {
                "measurementId": "cf224fbc-c4bf-4ff3-a7ce-47bd11a83225",
                "measurementFunctionId": "fft",
                "parameters": {
                    "xAxis": "harmonics",
                    "yAxis": "linear",
                    "numHarmonics": "100"
                }
            }
        ],
        "chartPanelsViewState": "[{\"type\":\"stack\",\"isClosable\":true,\"reorderEnabled\":true,\"title\":\"\",\"activeItemIndex\":0,\"content\":[{\"type\":\"component\",\"componentName\":\"MeasurementValue\",\"id\":\"cf224fbc-c4bf-4ff3-a7ce-47bd11a83225\",\"componentState\":{\"measurementId\":\"cf224fbc-c4bf-4ff3-a7ce-47bd11a83225\"},\"title\":\"FFT\",\"isClosable\":false,\"reorderEnabled\":true}]}]"
    }
}
*/
    createGenericWaveform({
        id,
        data,
        format,
        samplingRate,
        unitName,
        color,
        colorInverse,
        label,
        offset,
        scale,
        viewOptions,
        measurements,
        rulers
    }: {
        id: string;
        data: Buffer;
        format: WaveformFormat;
        samplingRate: number;
        unitName: string;
        color: string;
        colorInverse: string;
        label: string;
        offset: number;
        scale: number;
        viewOptions: IViewOptions;
        measurements: any;
        rulers: any;
    }) {
        const activityLogEntry: IActivityLogEntry = {
            id,
            date: new Date(),
            sid: "0",
            oid: "0",
            type: "instrument/file-download",
            message: JSON.stringify({
                sourceFilePath: "",
                state: "success",
                fileType: {
                    mime: "application/eez-raw"
                },
                waveformDefinition: {
                    samplingRate,
                    format,
                    unitName,
                    color,
                    colorInverse,
                    label,
                    offset,
                    scale,
                    dataLength: data.length
                },
                viewOptions,
                measurements,
                rulers
            }),
            data,
            deleted: false
        };

        return new Waveform(this.store, activityLogEntry, {
            toolbar: {
                showConfigureButton: false
            }
        });
    }

    createMultiWaveform({
        id,
        waveforms,
        viewOptions,
        measurements,
        rulers
    }: {
        id: string;
        waveforms: Waveform[];
        viewOptions: IViewOptions;
        measurements: any;
        rulers: any;
    }) {
        const waveformLinks = waveforms.map(waveform => ({
            id: waveform.id
        }));

        const activityLogEntry: IActivityLogEntry = {
            id,
            date: new Date(),
            sid: "0",
            oid: "0",
            type: "instrument/chart",
            message: JSON.stringify({
                waveformLinks,
                viewOptions,
                measurements,
                rulers
            }),
            data: null,
            deleted: false
        };

        const store = Object.assign({}, this.store, {
            findById: (id: string) => {
                for (const waveform of waveforms) {
                    if (id === waveform.id) {
                        return waveform;
                    }
                }
                return undefined;
            }
        });

        return new MultiWaveform(store, activityLogEntry, {
            toolbar: {
                showConfigureButton: false
            }
        });
    }

    /*
{
    "state": "success",
    "dataLength": 6624,
    "fileType": { "ext": "dlog", "mime": "application/eez-dlog" },
    "measurements": {
        "measurements": [
            {
                "measurementId": "aff6252d-b09a-470f-c60f-fe502def5bc2",
                "measurementFunctionId": "fft"
            },
            {
                "measurementId": "3f06816e-5df4-4d12-d146-bc1c3576d0e3",
                "measurementFunctionId": "average"
            }
        ],
        "chartPanelsViewState": "[{\"type\":\"stack\",\"isClosable\":true,\"reorderEnabled\":true,\"title\":\"\",\"activeItemIndex\":0,\"content\":[{\"type\":\"component\",\"componentName\":\"MeasurementValue\",\"id\":\"aff6252d-b09a-470f-c60f-fe502def5bc2\",\"componentState\":{\"measurementId\":\"aff6252d-b09a-470f-c60f-fe502def5bc2\"},\"title\":\"FFT (Ugs=1V)\",\"isClosable\":false,\"reorderEnabled\":true}]}]"
    },
    "rulers": {
        "xAxisRulersEnabled": true,
        "x1": 14.000000208616257,
        "x2": 14.000000208616257,
        "yAxisRulersEnabled": [],
        "y1": [],
        "y2": []
    }
}
*/
    createDlogWaveform({
        id,
        data,
        viewOptions,
        measurements,
        rulers
    }: {
        id: string;
        data: Buffer;
        viewOptions: IViewOptions;
        measurements: any;
        rulers: any;
    }) {
        const activityLogEntry: IActivityLogEntry = {
            id,
            date: new Date(),
            sid: "0",
            oid: "0",
            type: "instrument/file-download",
            message: JSON.stringify({
                state: "success",
                dataLength: data.length,
                fileType: { ext: "dlog", mime: "application/eez-dlog" },
                viewOptions,
                measurements,
                rulers
            }),
            data,
            deleted: false
        };

        return new DlogWaveform(this.store, activityLogEntry, {
            toolbar: {
                showConfigureButton: false
            }
        });
    }
}

////////////////////////////////////////////////////////////////////////////////

const EEZChartElement = observer(
    class EEZChartElement extends React.Component<{
        widget: EEZChartWidget;
        flowContext: IFlowContext;
        width: number;
        height: number;
        eezChart: EEZChart;
    }> {
        get appStore(): IAppStore {
            return {
                selectHistoryItemsSpecification: undefined,
                history: {} as any,
                deletedItemsHistory: {} as any,
                isHistoryItemSelected: (id: any) => {
                    console.log("isHistoryItemSelected", id);
                    return false;
                },
                selectHistoryItem: (id: string, selected: boolean) => {
                    console.log("selectHistoryItem", id, selected);
                },

                selectedHistoryItems: new Map<string, boolean>(),
                selectHistoryItems: (specification: any) => {
                    console.log("selectHistoryItems", specification);
                },

                oids: [],

                instrument: undefined as any,
                instrumentListStore: undefined,
                instrumentLists: [],
                undoManager: undefined,

                navigationStore: {
                    navigateToHistory: () => {
                        console.log("navigateToHistory");
                    },
                    navigateToDeletedHistoryItems: () => {
                        console.log("navigateToDeletedHistoryItems");
                    },
                    navigateToSessionsList: () => {
                        console.log("navigateToSessionsList");
                    },
                    mainHistoryView: undefined,
                    selectedListId: undefined,
                    changeSelectedListId: async (
                        listId: string | undefined
                    ) => {
                        console.log("changeSelectedListId", listId);
                    }
                },

                filters: undefined as any,

                findListIdByName: (listName: any) => undefined
            };
        }

        render() {
            const { flowContext, width, height } = this.props;

            return (
                <div
                    style={{
                        pointerEvents: flowContext.flowState ? "all" : "none",
                        width: width,
                        height: height
                    }}
                >
                    {this.props.eezChart.chart && (
                        <ChartPreview
                            appStore={this.appStore}
                            data={this.props.eezChart.chart}
                        />
                    )}
                </div>
            );
        }
    }
);
